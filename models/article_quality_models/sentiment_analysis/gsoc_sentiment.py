# -*- coding: utf-8 -*-
"""gsoc_sentiment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1C1oSvBgTu9hIiJi-gQfHp7a3SmcR9Jk-
"""

#!pip install transformers
from transformers import AutoModelForSequenceClassification
from transformers import TFAutoModelForSequenceClassification
from transformers import AutoTokenizer
import csv
import numpy as np
from scipy.special import softmax
import csv
import urllib.request


task = "sentiment"
MODEL = f"cardiffnlp/twitter-roberta-base-{task}"

tokenizer = AutoTokenizer.from_pretrained(MODEL)

# download label mapping
labels = []
mapping_link = f"https://raw.githubusercontent.com/cardiffnlp/tweeteval/main/datasets/{task}/mapping.txt"
with urllib.request.urlopen(mapping_link) as f:
    html = f.read().decode("utf-8").split("\n")
    csvreader = csv.reader(html, delimiter="\t")
labels = [row[1] for row in csvreader if len(row) > 1]

# PT
model = AutoModelForSequenceClassification.from_pretrained(MODEL)
model.save_pretrained(MODEL)


def get_sentiment(text):
    encoded_input = tokenizer(text, return_tensors="pt")
    output = model(**encoded_input)
    scores = output[0][0].detach().numpy()
    scores = softmax(scores)

    ranking = np.argsort(scores)
    ranking = ranking[::-1]
    return list(scores)

import sys
filename = "dataset_final.csv"
fl = open(filename , 'r')
csv_reader = csv.reader(fl)
cnt_neutral =[0,0,0] 
cnt_positive =[0,0,0]
cnt_negative =[0,0,0] ; 
threshold=0.5
for rows in csv_reader:
  label=int(rows[1])
  print(label)
  try:
    if (get_sentiment(rows[0])[0] >=0.5):
      cnt_positive[label]+=1
    elif (get_sentiment(rows[0])[1] >=0.5):
      cnt_neutral[label]+=1
    elif (get_sentiment(rows[0])[2] >=0.5):
      cnt_negative[label]+=1
  except:
    print("wrong data point")

print(cnt_positive , cnt_negative , cnt_neutral)

